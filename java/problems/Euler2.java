package problems;

public class Euler2 {
    /*
    Even Fibonacci numbers
    Problem 2

    Each new term in the Fibonacci sequence is generated by adding the previous
    two terms. By starting with 1 and 2, the first 10 terms will be:

        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed
    four million, find the sum of the even-valued terms.
     */

    public long solution() {
        int N_max = (int)4e6;

        int sum = 0;
        int e = fibo(1);

        for (int n=2; e <= N_max ; n++) {
            e = fibo(n);
            if (e % 2 == 0) {
                sum += e;
            }
        }

        return sum;
    }

    private int fibo(int N) {
        if (N <= 2) {
            return 1;
        }
        int one = 1;
        int two = 1;
        for (int i = 3; i <= N; i++) {
            int next = one + two;
            one = two;
            two = next;
        }
        return two;
    }
}
