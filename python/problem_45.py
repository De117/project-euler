# Problem 45 (Triangular, pentagonal, and hexagonal)
# ==================================================
#
# Triangle, pentagonal, and hexagonal numbers are generated by the following
# formulae:
#
# Triangle 	  	Tn=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
# Pentagonal 	  	Pn=n(3nâˆ’1)/2 	  	1, 5, 12, 22, 35, ...
# Hexagonal 	  	Hn=n(2nâˆ’1) 	  	1, 6, 15, 28, 45, ...
#
# It can be verified that T285 = P165 = H143 = 40755.
#
# Find the next triangle number that is also pentagonal and hexagonal.

def triangular(n: int):  # n >= 0
    return n*(n + 1)//2

def pentagonal(n: int):  # n >= 0
    return n*(3*n - 1) // 2

def hexagonal(n: int):  # n >= 0
    return n*(2*n - 1)

def is_triangular(n: int):
    origin = ((1 + 8*n)**0.5 - 1) / 2
    rounded = round(origin)
    return abs(origin - rounded) < 1e-14

def is_pentagonal(n: int):
    origin = (1 + (1 + 24*n)**0.5) / 6
    rounded = round(origin)
    return abs(origin - rounded) < 1e-14

def is_hexagonal(n: int):
    origin = (1 + (1 + 8*n)**0.5) / 4
    rounded = round(origin)
    return abs(origin - rounded) < 1e-14


if __name__ == "__main__":
    n = 285 + 1
    while True:
        T = triangular(n)
        if is_pentagonal(T) and is_hexagonal(T):
            print(T)
            break
        n += 1
