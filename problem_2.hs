-- Problem 2 (Even Fibonacci numbers)
--
-- Each new term in the Fibonacci sequence is generated by adding the previous
-- two terms. By starting with 1 and 2, the first 10 terms will be:
--
--    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--
-- By considering the terms in the Fibonacci sequence whose values do not
-- exceed four million, find the sum of the even-valued terms.

fibo :: (Integral a) => a -> a
fibo n
    | n < 1     = error "n must be strictly positive!"
    | otherwise = fibo' 0 1 1
    where
        fibo' a b counter
            | counter == n  = b
            | otherwise     = fibo' b (a+b) (counter+1)

fiboNumbers :: (Integral a) => [a]
fiboNumbers = 1:(fiboGen 1 1)
    where
        fiboGen a b = b:(fiboGen b (a+b))

main = print . sum . filter even . takeWhile (<4000000) $ fiboNumbers
